{"version":3,"file":null,"sources":["../src/index.js"],"sourcesContent":["'use strict';\n\nrequire('es6-promise').polyfill();\nconst snakeCaseKeys = require('snakecase-keys');\nconst Request = require('./request');\nconst { AuthenticationError } = require('./errors');\nconst constants = require('./constants');\n\nclass Wealthsimple {\n  constructor({\n    clientId, clientSecret, auth, fetchAdapter, env = 'sandbox', apiVersion = 'v1', onAuthSuccess = null, onAuthRevoke = null, verbose = false,\n  }) {\n    // OAuth client details:\n    if (!clientId || typeof clientId !== 'string') {\n      throw new Error('Please specify a valid OAuth \\'clientId\\'.');\n    }\n    this.clientId = clientId;\n    this.clientSecret = clientSecret;\n\n    // API environment (either 'sandbox' or 'production') and version:\n    if (!constants.ENVIRONMENTS.includes(env)) {\n      throw new Error(`Unrecognized 'env'. Please use one of: ${constants.ENVIRONMENTS.join(', ')}`);\n    }\n    this.env = env;\n\n    // Setting to `true` will add request logging.\n    this.verbose = verbose;\n\n    if (!constants.API_VERSIONS.includes(apiVersion)) {\n      throw new Error(`Unrecognized 'apiVersion'. Please use one of: ${constants.API_VERSIONS.join(', ')}`);\n    }\n    this.apiVersion = apiVersion;\n\n    // Optionally pass in existing OAuth details (access_token + refresh_token)\n    // so that the user does not have to be prompted to log in again:\n    this.auth = auth;\n\n    // Optionally allow a custom request adapter to be specified (e.g. for\n    // react-native) which must implement the `fetch` interface:\n    if (fetchAdapter) {\n      this.fetchAdapter = fetchAdapter;\n    } else {\n      require('isomorphic-fetch');\n      if (typeof window !== 'undefined') {\n        // Browser: fixes the following error:\n        // Error: TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation\n        this.fetchAdapter = window.fetch.bind(window);\n      } else {\n        // Node.js:\n        this.fetchAdapter = fetch;\n      }\n    }\n\n    // Optionally allow for callbacks on certain key events:\n    this.onAuthSuccess = onAuthSuccess;\n    this.onAuthRevoke = onAuthRevoke;\n\n    this.request = new Request({ client: this });\n  }\n\n  resourceOwnerId() {\n    return this.auth && this.auth.resource_owner_id;\n  }\n\n  authExpiresAt() {\n    if (this.auth) {\n      const expiresAtTimestamp = this.auth.created_at + this.auth.expires_in;\n      return new Date(expiresAtTimestamp * 1000);\n    }\n    return undefined;\n  }\n\n  isAuthExpired() {\n    const expiresAt = this.authExpiresAt();\n    return !expiresAt || expiresAt <= new Date();\n  }\n\n  isAuthRefreshable() {\n    return !!(this.auth && typeof this.auth.refresh_token === 'string');\n  }\n\n  authenticate(attributes) {\n    const headers = {};\n    if (attributes.otp) {\n      headers[constants.OTP_HEADER] = attributes.otp;\n      delete attributes.otp;\n    }\n\n    let checkAuthRefresh = true;\n    if (attributes.hasOwnProperty('checkAuthRefresh')) {\n      ({ checkAuthRefresh } = attributes);\n      delete attributes.checkAuthRefresh;\n    }\n\n    const body = snakeCaseKeys(attributes);\n    Object.assign(body, {\n      client_id: this.clientId,\n      client_secret: this.clientSecret,\n    });\n\n    return this.post('/oauth/token', { headers, body, checkAuthRefresh })\n      .then((json) => {\n        // Save auth details for use in subsequent requests:\n        this.auth = json;\n\n        if (this.onAuthSuccess) {\n          this.onAuthSuccess(json);\n        }\n\n        return json;\n      })\n      .catch((error) => {\n        throw new AuthenticationError(error.response, error.json);\n      });\n  }\n\n  refreshAuth() {\n    if (!this.isAuthRefreshable()) {\n      throw new Error('Must have a refresh_token set in order to refresh auth.');\n    }\n    return this.authenticate({\n      grantType: 'refresh_token',\n      refreshToken: this.auth.refresh_token,\n      checkAuthRefresh: false,\n    });\n  }\n\n  revokeAuth() {\n    return this.post('/oauth/revoke')\n      .then(() => {\n        this.auth = null;\n\n        if (this.onAuthRevoke) {\n          this.onAuthRevoke();\n        }\n      });\n  }\n\n  _fetch(method, path, {\n    headers = {},\n    query = {},\n    body = null,\n    checkAuthRefresh = true,\n  }) {\n    const exeturePrimaryRequest = () => {\n      if (!this.isAuthExpired()) {\n        headers.Authorization = `Bearer ${this.auth.access_token}`;\n      }\n      return this.request.fetch({\n        method, path, headers, query, body,\n      });\n    };\n\n    if (checkAuthRefresh && this.isAuthRefreshable() && this.isAuthExpired()) {\n      // Automatically refresh auth using refresh_token, then subsequently\n      // perform the actual request:\n      return this.refreshAuth().then(exeturePrimaryRequest);\n    }\n    return exeturePrimaryRequest();\n  }\n}\n\n['get', 'patch', 'put', 'post', 'delete', 'head', 'options'].forEach((method) => {\n  Wealthsimple.prototype[method] = function (path, options = {}) {\n    return this._fetch(method.toUpperCase(), path, options);\n  };\n});\n\nmodule.exports = Wealthsimple;\n"],"names":["require","polyfill","snakeCaseKeys","Request","AuthenticationError","constants","Wealthsimple","clientId","clientSecret","auth","fetchAdapter","env","apiVersion","onAuthSuccess","onAuthRevoke","verbose","Error","ENVIRONMENTS","includes","join","API_VERSIONS","window","fetch","bind","request","client","this","resource_owner_id","expiresAtTimestamp","created_at","expires_in","Date","expiresAt","authExpiresAt","refresh_token","attributes","headers","otp","OTP_HEADER","checkAuthRefresh","hasOwnProperty","body","assign","post","then","json","_this","catch","error","response","isAuthRefreshable","authenticate","_this2","method","path","query","exeturePrimaryRequest","_this3","isAuthExpired","Authorization","access_token","refreshAuth","forEach","prototype","options","_fetch","toUpperCase","module","exports"],"mappings":"uJAEAA,QAAQ,eAAeC,WACvB,IAAMC,EAAgBF,QAAQ,kBACxBG,EAAUH,QAAQ,aAChBI,EAAwBJ,QAAQ,YAAhCI,oBACFC,EAAYL,QAAQ,eAEpBM,+BAEFC,IAAAA,SAAUC,IAAAA,aAAcC,IAAAA,KAAMC,IAAAA,iBAAcC,IAAAA,aAAM,gBAAWC,WAAAA,aAAa,WAAMC,cAAAA,aAAgB,WAAMC,aAAAA,aAAe,WAAMC,QAAAA,wDAGtHR,GAAgC,iBAAbA,QAChB,IAAIS,MAAM,oDAEbT,SAAWA,OACXC,aAAeA,GAGfH,EAAUY,aAAaC,SAASP,SAC7B,IAAIK,gDAAgDX,EAAUY,aAAaE,KAAK,eAEnFR,IAAMA,OAGNI,QAAUA,GAEVV,EAAUe,aAAaF,SAASN,SAC7B,IAAII,uDAAuDX,EAAUe,aAAaD,KAAK,YAE1FP,WAAaA,OAIbH,KAAOA,EAIRC,OACGA,aAAeA,WAEZ,oBACc,oBAAXW,YAGJX,aAAeW,OAAOC,MAAMC,KAAKF,aAGjCX,aAAeY,YAKnBT,cAAgBA,OAChBC,aAAeA,OAEfU,QAAU,IAAIrB,GAAUsB,OAAQC,yFAI9BA,KAAKjB,MAAQiB,KAAKjB,KAAKkB,6DAI1BD,KAAKjB,KAAM,KACPmB,EAAqBF,KAAKjB,KAAKoB,WAAaH,KAAKjB,KAAKqB,kBACrD,IAAIC,KAA0B,IAArBH,gDAMZI,EAAYN,KAAKO,uBACfD,GAAaA,GAAa,IAAID,0DAI5BL,KAAKjB,MAA2C,iBAA5BiB,KAAKjB,KAAKyB,oDAG7BC,cACLC,KACFD,EAAWE,QACLhC,EAAUiC,YAAcH,EAAWE,WACpCF,EAAWE,SAGhBE,GAAmB,EACnBJ,EAAWK,eAAe,wBACJL,EAArBI,wBACIJ,EAAWI,sBAGdE,EAAOvC,EAAciC,iBACpBO,OAAOD,aACDf,KAAKnB,uBACDmB,KAAKlB,eAGfkB,KAAKiB,KAAK,gBAAkBP,UAASK,OAAMF,qBAC/CK,KAAK,SAACC,YAEApC,KAAOoC,EAERC,EAAKjC,iBACFA,cAAcgC,GAGdA,IAERE,MAAM,SAACC,SACA,IAAI5C,EAAoB4C,EAAMC,SAAUD,EAAMH,kDAKnDnB,KAAKwB,0BACF,IAAIlC,MAAM,kEAEXU,KAAKyB,wBACC,6BACGzB,KAAKjB,KAAKyB,gCACN,2DAKbR,KAAKiB,KAAK,iBACdC,KAAK,aACCnC,KAAO,KAER2C,EAAKtC,gBACFA,gDAKNuC,EAAQC,oBACblB,QAAAA,sBACAmB,MAAAA,sBACAd,KAAAA,aAAO,WACPF,iBAEMiB,EAAwB,kBACvBC,EAAKC,oBACAC,wBAA0BF,EAAKhD,KAAKmD,cAEvCH,EAAKjC,QAAQF,gBACVgC,OAAMlB,UAASmB,QAAOd,iCAIVf,KAAKwB,qBAAuBxB,KAAKgC,gBAGhDhC,KAAKmC,cAAcjB,KAAKY,GAE1BA,cAIV,MAAO,QAAS,MAAO,OAAQ,SAAU,OAAQ,WAAWM,QAAQ,SAACT,KACvDU,UAAUV,GAAU,SAAUC,OAAMU,mEACxCtC,KAAKuC,OAAOZ,EAAOa,cAAeZ,EAAMU,MAInDG,OAAOC,QAAU9D"}